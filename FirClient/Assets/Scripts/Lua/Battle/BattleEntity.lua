---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by miaowenjie.
--- DateTime: 8/22/22 10:33 PM
---

local EntityBase =  require("Battle.Entity.EntityBase")

---@class BattleEntity : EntityBase
local BattleEntity = class("BattleEntity", EntityBase)

function BattleEntity:initialize(id,teamId,pos,room)
    self.waitEnter = true
    self.id = id
    self.pos = pos
    self.room = room

    self.teamId = teamId
    --readconf
    self.hp = 10
    self.att = 5
    self.move = 1
    self.range = 1
    self.buffs = {}

    self.speed = 1000
    self.atb = 0
end

function BattleEntity:EnterPool()
    log("[Entity] EnterPool" , self.id )
    self.waitEnter = true
    self.speed = 1000
    self.atb = 0
end
--上场
function BattleEntity:EnterField()
    log("[Entity] EnterField" , self.id )
    self.waitEnter = false
    self.speed = 1000
    self.atb = 0
end

function BattleEntity:DoAction()
    self.atb = 0
    log("[Entity] DoAction" , self.id )
    self:StartTurn()
    self:DoAttackOrMove()
    self:EndTurn()
end

function BattleEntity:DoAttackOrMove()
    local enemy = self:FindEntity()
    if enemy ~= nil then
        self:DoAttack(enemy)
    else
        self:StartMove()
        self:EndMove()
    end
end

function BattleEntity:FindEntity()
    return nil
end

function BattleEntity:DoAttack(enemy)
    log("[Entity] DoAttack" , self.id )
    self:StartAttack()
    local damage = self:Attack(enemy)
    enemy:TakeDamage(damage)
    self:EndAttack()
end

--开始行动
function BattleEntity:StartTurn()

end
--结束行动
function BattleEntity:EndTurn()
    if not self.dead then
        
    end
end

--受击
function BattleEntity:TakeDamage(damage)

end

function BattleEntity:Recover(value)

end

--开始攻击
function BattleEntity:StartAttack()

end

function BattleEntity:Attack(enemy)
    return 10
end
--结束攻击
function BattleEntity:EndAttack()

end
--开始移动
function BattleEntity:StartMove()
    log("[Entity] StartMove" , self.id )
    local nextPos = self:GetNext()
end

--结束移动
function BattleEntity:EndMove()

end


function BattleEntity:Update(deltaTime)
    self.atb = self.atb + self.speed * deltaTime
end

function BattleEntity:CanAction()
    if self.waitEnter then
        return self.atb >= BattlePrepareMax
    else
        return self.atb >= BattleAtbMax
    end
end

function BattleEntity:Destroy()

end

function BattleEntity:IsWait()
    return self.waitEnter
end


function BattleEntity:GetNext()
    self.room:GetNext(self.teamId , self.pos)
end
return BattleEntity