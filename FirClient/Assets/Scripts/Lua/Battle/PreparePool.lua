---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by miao.
--- DateTime: 8/22/22 10:58 PM
---
local battleEntity = require("Battle.BattleEntity")

---@class PreparePool

local PreparePool = class("PreparePool")

function PreparePool:initialize(room)
    ---@type BattleRoom
    self.room = room

    ---@type BattleEntity[]
    self.entities = {}
    self.actionList = {}
end

function PreparePool:Update(delta)

    if # self.actionList > 0  then
        self.actionList = {}
    end
    local len = #self.entities

    if len > 0 then
        for i = 1 ,len  do
            ---@type BattleEntity
            local entity = self.entities[i]
            entity:Update(delta)
            if entity:CanAction() then
                table.insert(self.actionList , entity)
            end
        end
    end

    if #self.actionList > 0 then
        table.sort(self.actionList,function (a,b)
            if a.speed ~= b.speed  then
                return a.speed > b.speed
            end
            return a.id < b.id
        end)
        for _, entity in pairs(self.actionList) do
            if entity:IsWait() then
                self.room:EnterField(entity)
            elseif entity:CanAction() then
                self.room:DoAction(entity)
            end
        end
    end


end

---@field id number @config id
---@field extend {} @加成等信息
function PreparePool:Add(id,teamId,pos)
    log("[Pool] add " , id , teamId, pos[1],pos[2])
    local entity = battleEntity:new(id,teamId,pos,self.room)
    entity:EnterPool()
    table.insert(self.entities , entity)

end

function PreparePool:Remove(id)
    local index = 0
    for i, v in pairs(self.entities) do
        if v ~= nil and v.id == id then
            index = i
            break
        end
    end
    if index > 0 then
        table.remove(self.entities,index)
    end
end


return PreparePool